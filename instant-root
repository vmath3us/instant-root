#!/bin/bash
list_dir=("bin" "boot" "etc" "lib" "lib64" "opt" "root" "sbin" "srv" "usr" "var" "mnt")
chroot_system_dirs=("proc" "sys" "tmp" "dev" "run")
instant_root_dir="/var/cache/instant-root"  #### need real file system, not overlayfs
user_shell=$SHELL
user_chroot=$(whoami)
systemd="0"
support_dir(){
    moment=$(date +%Y-%m-%d--%H-%M-%S)
    operation_dir="$instant_root_dir/$moment"
    chroot_dir="$operation_dir/chroot"
    sudo mkdir -p $chroot_dir
    overlay_create_and_mount
}
overlay_create_and_mount(){
printf "                criando overlays...                               \n"
        for i in ${list_dir[@]} ; do
         sudo mkdir -p $operation_dir/overlay/work-$i
         sudo mkdir -p $operation_dir/overlay/upper-$i
         sudo mkdir -p $chroot_dir/$i
         sudo mount  -t overlay overlay -o lowerdir=/$i,upperdir=$operation_dir/overlay/upper-$i,workdir=$operation_dir/overlay/work-$i $chroot_dir/$i
        done
chroot_mounts
}
chroot_setup(){
    for i in ${chroot_system_dirs[@]} ; do
        if [ $i  == "proc" ] ; then
            mkdir  $chroot_dir/$i
            mount --types $i /$i $chroot_dir/$i
        elif [ $i == "sys" ] || [ $i == "tmp" ] ; then
            mkdir  $chroot_dir/$i
            mount --types "$i"fs /$i $chroot_dir/$i
        else
            mkdir $chroot_dir/$i
            mount --rbind /$i $chroot_dir/$i
            mount --make-rslave $chroot_dir/$i
        fi
    done
home_setup
}
home_setup(){
    mkdir -p $chroot_dir/home
    mount --rbind /home $chroot_dir/home
    mount --make-rslave $chroot_dir/home
    chroot_switch
}
chroot_switch(){
    chroot $chroot_dir
    umount -R $chroot_dir/*
}
validate_dir(){
    if [ -d $directory/overlay ] && [ -d $directory/chroot ] ; then
        operation_dir=$directory
        chroot_dir="$directory/chroot"
        overlay_create_and_mount
    else
        printf "$directory nunca usado antes, saindo%s\n"
        exit 1
    fi
}
printf "###########################################################\n"
printf "                Instant Root                               \n"
printf "###########################################################\n"



if [ $user_chroot == "root" ] ; then
    printf "execute com seu usu√°rio%s\n"
    exit 1
fi
###########################################################
if [ -z $1 ] ; then support_dir ; fi
###########################################################
if [ "$1" == '-d' ] ; then

    if [  -z $2 ] ; then
        directory=$(pwd)
        validate_dir
    else
        directory=$2
        validate_dir
    fi

elif [ "$1" == '.' ] ; then
    directory=$(pwd)
    validate_dir
fi
