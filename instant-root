#!/bin/sh
list_dir=("bin" "boot" "etc" "lib" "lib64" "opt" "root" "sbin" "srv" "usr" "var" "mnt")
chroot_system_dirs=("proc" "sys" "dev" "run" "tmp")
instant_root_dir="/var/cache/instant-root"  #### need real file system, not overlayfs
user_shell=$SHELL
user_chroot=$(whoami)
moment=$(date +%Y-%m-%d--%H-%M-%S)
mode="chroot"
storage="new_provisioning"
validate_dir(){
    if [ $storage == "provisioned" ] ; then
        if [ -d $directory/overlay ] && [ -d $directory/chroot ] ; then
            operation_dir=$directory
            chroot_dir="$directory/chroot"
            overlay_create_and_mount
        else
            printf "$directory nunca usado antes, saindo%s\n"
            exit 1
        fi
    elif [ $storage == "new_provisioning" ] ; then
        support_dir
    fi
}
support_dir(){
    operation_dir="$instant_root_dir/$moment"
    chroot_dir="$operation_dir/chroot"
    sudo mkdir -p $chroot_dir
    overlay_create_and_mount
}
overlay_create_and_mount(){
printf "                verificando overlays...                               \n"
        for i in ${list_dir[@]} ; do
         if ! mountpoint -q $chroot_dir/$i > /dev/null; then
         sudo mkdir -p $operation_dir/overlay/work-$i
         sudo mkdir -p $operation_dir/overlay/upper-$i
         sudo mkdir -p $chroot_dir/$i
         sudo mount  -t overlay overlay -o lowerdir=/$i,upperdir=$operation_dir/overlay/upper-$i,workdir=$operation_dir/overlay/work-$i $chroot_dir/$i
         fi
        done
chroot_mounts
}
chroot_mounts(){
printf "                verificando pastas de processos...       \n"
    if [ $mode == "chroot" ]; then
        for i in ${chroot_system_dirs[@]} ; do
            if ! mountpoint -q $chroot_dir/$i > /dev/null; then
                sudo mkdir  -p $chroot_dir/$i
                if [ $i != "tmp" ] ;then
                    sudo mount --rbind /$i $chroot_dir/$i
                   sudo mount --make-rslave $chroot_dir/$i
                else
                    sudo mount --types "$i"fs /$i $chroot_dir/$i
                   sudo mount --make-rslave $chroot_dir/$i
                fi
            fi
        done
        home_setup
    elif [ $mode == "systemd" ] ; then
        home_setup
    fi
}
home_setup(){
    if ! mountpoint -q $chroot_dir/home > /dev/null; then
        printf "                montando home...       \n"
        sudo mkdir -p $chroot_dir/home
        sudo mount --rbind /home $chroot_dir/home
        sudo mount --make-rslave $chroot_dir/home
    fi
    generate_vars
}
generate_vars(){
    if [ $mode == "chroot" ] ; then
    printf "                exportando variáveis de usuário...       \n"
        while read -r env_list; do
            printf "export \"${env_list}\"\n" >> /tmp/entrypoint-instant-root-$moment
        done < <(printenv | grep -Ev "!")
        printf "cd $PWD\n" >> /tmp/entrypoint-instant-root-$moment
        printf "$user_shell -l" >> /tmp/entrypoint-instant-root-$moment
        sudo mv /tmp/entrypoint-instant-root-$moment $chroot_dir/tmp/entrypoint
        chroot_switch
    elif [ $mode == "systemd" ] ; then
        chroot_switch
    fi
}
chroot_switch(){
    if [ $mode == "chroot" ] ; then
        chroot_setup
    elif [ $mode == "systemd" ] ; then
        systemd_setup
    fi
}
chroot_setup(){
    printf "        chroot em $chroot_dir                 \n"
    printf "        Ctrl-d  para sair               \n"
    printf "###########################################################\n"
    printf "    Atenção: $user_chroot e root não possuem senha aqui    \n"
    printf "###########################################################\n"
    sudo chroot $chroot_dir su -c "printf "%s:" "$user_chroot" | chpasswd -e ; printf "%s:" "root" | chpasswd -e" ##### zero password to root and user; thanks 89luca89
    sudo chroot $chroot_dir su -c "$user_shell /tmp/entrypoint" $user_chroot
#sudo chroot $chroot_dir su -c "$user_shell -l ; cd $current_dir " $user_chroot
    exiting_ask
}
systemd_setup(){
        sudo mkdir -p $chroot_dir/etc/systemd/system/console-getty.service.d/
        printf  "[Service]\nExecStart=\nExecStart=-/sbin/agetty -o '-p -f -- \\\\\\\\u' --noclear --keep-baud --autologin $user_chroot - 115200,38400,9600 \$TERM\n" | sudo tee $chroot_dir/etc/systemd/system/console-getty.service.d/autologin.conf > /dev/null
        printf "#!/usr/bin/bash\nprintf \"%%s:\" \"$user_chroot\" | chpasswd -e\nprintf \"%%s:\" \"root\" | chpasswd -e" | sudo tee $chroot_dir/usr/bin/reset-password > /dev/null
        sudo chmod 755 $chroot_dir/usr/bin/reset-password
        printf "[Install]\nWantedBy=multi-user.target\n[Service]\nExecStart=/usr/bin/reset-password" | sudo tee $chroot_dir/etc/systemd/system/reset-password.service > /dev/null
        sudo ln -sf $chroot_dir/etc/systemd/system/reset-password.service $chroot_dir/etc/systemd/system/multi-user.target.wants/reset-password.service
        printf "###########################################################\n"
        printf "    Atenção: $user_chroot e root não possuem senha aqui    \n"
        printf "###########################################################\n"
        sleep 1
        sudo systemd-nspawn -qbD $chroot_dir
    exiting_ask
}
exiting_ask(){
exiting="N"
    printf "###########################################################\n"
    printf "        desmontar chroot? y/N              \n"
    printf "###########################################################\n"
    read -r exiting < /dev/tty 
        case $exiting in
            y|Y)
            printf "    desmontando chroot, para usa-lo novamente execute\n%s"
            printf "    instant-root -d $operation_dir                  \n%s"
            sudo umount -R $chroot_dir/* 2> /dev/null
            exit
            ;;
            *)  for i in ${chroot_system_dirs[@]} ; do
                    sudo umount -R $chroot_dir/$i 2> /dev/null
                done
            printf "    mantendo choot montado, para usa-lo novamente execute\n%s"
            printf "    instant-root -d $operation_dir                  \n%s"
            exit
            ;;
        esac
}

#######################################################################################
#
#
#######################################################################################

printf "###########################################################\n"
printf "                Instant Root                               \n"
printf "###########################################################\n"
if [ $user_chroot == "root" ] ; then
    printf "execute com seu usuário%s\n"
    exit 1
fi
while :; do
    case $1 in
        -d)
            if [  -z $2 ] ; then
                storage="new_provisioning"
            shift
            shift
            elif [ $2 == "." ] ; then
                storage="provisioned"
                directory=$(pwd)
            shift
            shift
            else
                directory="$(readlink -f $2)"
                storage="provisioned"
            shift
            shift
            fi
            ;;
        -m)
            if [ -z $2 ] || [ $2 == "chroot" ] ; then
            mode="chroot"
            shift
            shift
            elif [ $2 == "systemd" ] ; then
            mode="$2"
            printf "           pressione Ctrl ]]] para sair%s\n"
            shift
            shift
            fi
            ;;
        *)
            break
            ;;
    esac
done
validate_dir
